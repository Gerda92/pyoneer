# Experiment parameters

debug: True

results_path: '/home/gerda/Desktop/results'
exp_name: 'ssl test'

data_split: cifar10_default

num_classes: 10

# transform parameters
transform:
    gen_func: random_shift_displacement_map
    params_gen:
        max_shift: 10
    apply_func: displacement_map
    params_apply:
        interpolation_order: 3

# should network outputs and labels also be transformed and how:
transform_output: False

# this will apply the exact same transform to network outputs and labels as specified in 'transform'
# transform_output: True

# this will apply the same transform but with different interpolation_order:
# transform_output: 
#     params_apply:
#         interpolation_order: 0

# network architecture
arch:
    # name: simple_model
    # params: {}
    name: 'model_conv_small'
    params:
        activation: 'LeakyReLU'
        dropout: 0.5

optimizer:
    name: Adam
    params:
        learning_rate: 0.001

# loss function
loss: kl_divergence
alpha: 0

# training
batch_size: 128
epochs: 120
# epochs: 120 # should be enough to converge